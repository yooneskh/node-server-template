'use strict';
var beginTime = Date.now();

var config = require('../dist/global/config').Config;

var app = require('../dist/app').default;

var debug = require('debug')('express:server');
var http = require('http');

var port = normalizePort(config.port);
app.set('port', port);

var server = http.createServer(app);

var socketio = require('socket.io')(server);
var socketHandler = require('../dist/socket').default;

socketio.on('connection', socketHandler);

server.listen(port);

server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) {

  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;

}

function onError(error) {

  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }

}

function onListening() {

  var addr = server.address();

  var bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;

  var allTime = Date.now() - beginTime;

  debug('Listening on ' + bind + ', Startup time: ' + allTime + 'ms');
  console.log('Listening on ' + bind + ', Startup time: ' + allTime + 'ms');

}